/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/morita/jquery.lighter.js":
/*!***********************************************!*\
  !*** ./resources/js/morita/jquery.lighter.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Generated by CoffeeScript 1.9.3\n\n/*\njQuery Lighter\nCopyright 2015 Kevin Sylvestre\n1.3.4\n */\n(function () {\n  \"use strict\";\n\n  var $,\n      Animation,\n      Lighter,\n      Slide,\n      bind = function bind(fn, me) {\n    return function () {\n      return fn.apply(me, arguments);\n    };\n  };\n\n  $ = jQuery;\n\n  Animation = function () {\n    function Animation() {}\n\n    Animation.transitions = {\n      \"webkitTransition\": \"webkitTransitionEnd\",\n      \"mozTransition\": \"mozTransitionEnd\",\n      \"oTransition\": \"oTransitionEnd\",\n      \"transition\": \"transitionend\"\n    };\n\n    Animation.transition = function ($el) {\n      var el, i, len, ref, result, type;\n\n      for (i = 0, len = $el.length; i < len; i++) {\n        el = $el[i];\n        ref = this.transitions;\n\n        for (type in ref) {\n          result = ref[type];\n\n          if (el.style[type] != null) {\n            return result;\n          }\n        }\n      }\n    };\n\n    Animation.execute = function ($el, callback) {\n      var transition;\n      transition = this.transition($el);\n\n      if (transition != null) {\n        return $el.one(transition, callback);\n      } else {\n        return callback();\n      }\n    };\n\n    return Animation;\n  }();\n\n  Slide = function () {\n    function Slide(url) {\n      this.url = url;\n    }\n\n    Slide.prototype.type = function () {\n      switch (false) {\n        case !this.url.match(/\\.(webp|jpeg|jpg|jpe|gif|png|bmp)$/i):\n          return 'image';\n\n        default:\n          return 'unknown';\n      }\n    };\n\n    Slide.prototype.preload = function (callback) {\n      var image;\n      image = new Image();\n      image.src = this.url;\n      return image.onload = function (_this) {\n        return function () {\n          _this.dimensions = {\n            width: image.width,\n            height: image.height\n          };\n          return callback(_this);\n        };\n      }(this);\n    };\n\n    Slide.prototype.$content = function () {\n      return $(\"<img />\").attr({\n        src: this.url\n      });\n    };\n\n    return Slide;\n  }();\n\n  Lighter = function () {\n    Lighter.namespace = \"lighter\";\n    Lighter.prototype.defaults = {\n      loading: '#{Lighter.namespace}-loading',\n      fetched: '#{Lighter.namespace}-fetched',\n      padding: 40,\n      dimensions: {\n        width: 480,\n        height: 480\n      },\n      template: \"<div class='\" + Lighter.namespace + \" \" + Lighter.namespace + \"-fade'>\\n  <div class='\" + Lighter.namespace + \"-container'>\\n    <span class='\" + Lighter.namespace + \"-content'></span>\\n    <a class='\" + Lighter.namespace + \"-close'>&times;</a>\\n    <a class='\" + Lighter.namespace + \"-prev'>&lsaquo;</a>\\n    <a class='\" + Lighter.namespace + \"-next'>&rsaquo;</a>\\n  </div>\\n  <div class='\" + Lighter.namespace + \"-spinner'>\\n    <div class='\" + Lighter.namespace + \"-dot'></div>\\n    <div class='\" + Lighter.namespace + \"-dot'></div>\\n    <div class='\" + Lighter.namespace + \"-dot'></div>\\n  </div>\\n  <div class='\" + Lighter.namespace + \"-overlay'></div>\\n</div>\"\n    };\n\n    Lighter.lighter = function ($target, options) {\n      var data;\n\n      if (options == null) {\n        options = {};\n      }\n\n      data = $target.data('_lighter');\n\n      if (!data) {\n        $target.data('_lighter', data = new Lighter($target, options));\n      }\n\n      return data;\n    };\n\n    Lighter.prototype.$ = function (selector) {\n      return this.$el.find(selector);\n    };\n\n    function Lighter($target, settings) {\n      if (settings == null) {\n        settings = {};\n      }\n\n      this.show = bind(this.show, this);\n      this.hide = bind(this.hide, this);\n      this.observe = bind(this.observe, this);\n      this.keyup = bind(this.keyup, this);\n      this.size = bind(this.size, this);\n      this.align = bind(this.align, this);\n      this.process = bind(this.process, this);\n      this.resize = bind(this.resize, this);\n      this.type = bind(this.type, this);\n      this.prev = bind(this.prev, this);\n      this.next = bind(this.next, this);\n      this.close = bind(this.close, this);\n      this.$ = bind(this.$, this);\n      this.$target = $target;\n      this.settings = $.extend({}, this.defaults, settings);\n      this.$el = $(this.settings.template);\n      this.$overlay = this.$(\".\" + Lighter.namespace + \"-overlay\");\n      this.$content = this.$(\".\" + Lighter.namespace + \"-content\");\n      this.$container = this.$(\".\" + Lighter.namespace + \"-container\");\n      this.$close = this.$(\".\" + Lighter.namespace + \"-close\");\n      this.$prev = this.$(\".\" + Lighter.namespace + \"-prev\");\n      this.$next = this.$(\".\" + Lighter.namespace + \"-next\");\n      this.$body = this.$(\".\" + Lighter.namespace + \"-body\");\n      this.dimensions = this.settings.dimensions;\n      this.process();\n    }\n\n    Lighter.prototype.close = function (event) {\n      if (event != null) {\n        event.preventDefault();\n      }\n\n      if (event != null) {\n        event.stopPropagation();\n      }\n\n      return this.hide();\n    };\n\n    Lighter.prototype.next = function (event) {\n      if (event != null) {\n        event.preventDefault();\n      }\n\n      return event != null ? event.stopPropagation() : void 0;\n    };\n\n    Lighter.prototype.prev = function () {\n      if (typeof event !== \"undefined\" && event !== null) {\n        event.preventDefault();\n      }\n\n      return typeof event !== \"undefined\" && event !== null ? event.stopPropagation() : void 0;\n    };\n\n    Lighter.prototype.type = function (href) {\n      if (href == null) {\n        href = this.href();\n      }\n\n      return this.settings.type || (this.href().match(/\\.(webp|jpeg|jpg|jpe|gif|png|bmp)$/i) ? \"image\" : void 0);\n    };\n\n    Lighter.prototype.resize = function (dimensions) {\n      this.dimensions = dimensions;\n      return this.align();\n    };\n\n    Lighter.prototype.process = function () {\n      var fetched, loading;\n\n      fetched = function (_this) {\n        return function () {\n          return _this.$el.removeClass(Lighter.namespace + \"-loading\").addClass(Lighter.namespace + \"-fetched\");\n        };\n      }(this);\n\n      loading = function (_this) {\n        return function () {\n          return _this.$el.removeClass(Lighter.namespace + \"-fetched\").addClass(Lighter.namespace + \"-loading\");\n        };\n      }(this);\n\n      this.slide = new Slide(this.$target.attr(\"href\"));\n      loading();\n      return this.slide.preload(function (_this) {\n        return function (slide) {\n          _this.resize(slide.dimensions);\n\n          _this.$content.html(_this.slide.$content());\n\n          return fetched();\n        };\n      }(this));\n    };\n\n    Lighter.prototype.align = function () {\n      var size;\n      size = this.size();\n      return this.$container.css({\n        width: size.width,\n        height: size.height,\n        margin: \"-\" + size.height / 2 + \"px -\" + size.width / 2 + \"px\"\n      });\n    };\n\n    Lighter.prototype.size = function () {\n      var ratio;\n      ratio = Math.max(this.dimensions.height / ($(window).height() - this.settings.padding), this.dimensions.width / ($(window).width() - this.settings.padding));\n      return {\n        width: ratio > 1.0 ? Math.round(this.dimensions.width / ratio) : this.dimensions.width,\n        height: ratio > 1.0 ? Math.round(this.dimensions.height / ratio) : this.dimensions.height\n      };\n    };\n\n    Lighter.prototype.keyup = function (event) {\n      if (event.target.form != null) {\n        return;\n      }\n\n      if (event.which === 27) {\n        this.close();\n      }\n\n      if (event.which === 37) {\n        this.prev();\n      }\n\n      if (event.which === 39) {\n        return this.next();\n      }\n    };\n\n    Lighter.prototype.observe = function (method) {\n      if (method == null) {\n        method = 'on';\n      }\n\n      $(window)[method](\"resize\", this.align);\n      $(document)[method](\"keyup\", this.keyup);\n      this.$overlay[method](\"click\", this.close);\n      this.$close[method](\"click\", this.close);\n      this.$next[method](\"click\", this.next);\n      return this.$prev[method](\"click\", this.prev);\n    };\n\n    Lighter.prototype.hide = function () {\n      var alpha, omega;\n\n      alpha = function (_this) {\n        return function () {\n          return _this.observe('off');\n        };\n      }(this);\n\n      omega = function (_this) {\n        return function () {\n          return _this.$el.remove();\n        };\n      }(this);\n\n      alpha();\n      this.$el.position();\n      this.$el.addClass(Lighter.namespace + \"-fade\");\n      return Animation.execute(this.$el, omega);\n    };\n\n    Lighter.prototype.show = function () {\n      var alpha, omega;\n\n      omega = function (_this) {\n        return function () {\n          return _this.observe('on');\n        };\n      }(this);\n\n      alpha = function (_this) {\n        return function () {\n          return $(document.body).append(_this.$el);\n        };\n      }(this);\n\n      alpha();\n      this.$el.position();\n      this.$el.removeClass(Lighter.namespace + \"-fade\");\n      return Animation.execute(this.$el, omega);\n    };\n\n    return Lighter;\n  }();\n\n  $.fn.extend({\n    lighter: function lighter(option) {\n      if (option == null) {\n        option = {};\n      }\n\n      return this.each(function () {\n        var $this, action, options;\n        $this = $(this);\n        options = $.extend({}, $.fn.lighter.defaults, _typeof(option) === \"object\" && option);\n        action = typeof option === \"string\" ? option : option.action;\n\n        if (action == null) {\n          action = \"show\";\n        }\n\n        return Lighter.lighter($this, options)[action]();\n      });\n    }\n  });\n  $(document).on(\"click\", \"[data-lighter]\", function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    return $(this).lighter();\n  });\n}).call(this);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/morita/jquery.lighter.js\n");

/***/ }),

/***/ 4:
/*!*****************************************************!*\
  !*** multi ./resources/js/morita/jquery.lighter.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\morita\resources\js\morita\jquery.lighter.js */"./resources/js/morita/jquery.lighter.js");


/***/ })

/******/ });